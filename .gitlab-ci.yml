variables:
    REPO: aistcpsec/taref-dev
    TA_REF_DOCS_DIR: /home/user/ta-ref/docs
    TA_REF_PDF: ta-ref.pdf
    TA_REF_SPEC_PDF: ta-ref-spec.pdf
    TA_REF_HTML: html_readme.tar.gz
    TA_REF_SPEC_HTML: html_spec.tar.gz
    ROOTFS_DIR: /home/user/optee/out-br/images
    ROOTFS_FILE: rootfs.cpio.gz
    NETBOOT_CONT_NME: optee-netboot-container

stages:
    - build
    - trigger

before_script:
    - docker login -u ${DOCKERHUB_USER} -p ${DOCKERHUB_PASSWD}

taref-dev-doxygen:
    variables:
        BRANCH: teep-master
    tags:
        - fast-shells
    stage: build
    script:
        - docker pull aistcpsec/tee-distro-dev:doxygen-20.04
        - docker build --build-arg BRANCH=${BRANCH} --build-arg DEBUG_DATE=$(date +%s) --build-arg
          CI_JOB_TOKEN=${CI_JOB_TOKEN} --rm -t ${REPO}:doxygen ./doxygen/teep-master
        - docker push ${REPO}:doxygen
        - docker run --name $CI_PIPELINE_ID -d ${REPO}:doxygen
        - docker wait $CI_PIPELINE_ID
        - docker cp $CI_PIPELINE_ID:${TA_REF_DOCS_DIR}/${TA_REF_PDF} $CI_PROJECT_DIR/${TA_REF_PDF}
        - docker cp $CI_PIPELINE_ID:${TA_REF_DOCS_DIR}/${TA_REF_SPEC_PDF} $CI_PROJECT_DIR/${TA_REF_SPEC_PDF}
        - docker cp $CI_PIPELINE_ID:${TA_REF_DOCS_DIR}/${TA_REF_HTML} $CI_PROJECT_DIR/${TA_REF_HTML}
        - docker cp $CI_PIPELINE_ID:${TA_REF_DOCS_DIR}/${TA_REF_SPEC_HTML} $CI_PROJECT_DIR/${TA_REF_SPEC_HTML}
    artifacts:
        paths:
            - $CI_PROJECT_DIR/${TA_REF_PDF}
            - $CI_PROJECT_DIR/${TA_REF_SPEC_PDF}
            - $CI_PROJECT_DIR/${TA_REF_HTML}
            - $CI_PROJECT_DIR/${TA_REF_SPEC_HTML}
        expire_in: 1 week

taref-dev-sgx:
    variables:
        BRANCH: teep-master
    tags:
        - fast-shells
    stage: build
    script:
        - docker pull aistcpsec/tee-dev:sgx-2.10
        - docker build --build-arg BRANCH=${BRANCH} --build-arg DEBUG_DATE=$(date +%s) --build-arg
          CI_JOB_TOKEN=${CI_JOB_TOKEN} --rm -t ${REPO}:sgx ./sgx/teep-master
        - docker push ${REPO}:sgx

taref-dev-optee:
    variables:
        BRANCH: teep-master
    tags:
        - fast-shells
    stage: build
    script:
        - docker pull aistcpsec/tee-dev:optee-3.10.0
        - docker build --build-arg BRANCH=${BRANCH} --build-arg DEBUG_DATE=$(date +%s) --build-arg
          CI_JOB_TOKEN=${CI_JOB_TOKEN} --rm -t ${REPO}:optee ./optee/teep-master
        - docker push ${REPO}:optee

taref-dev-keystone:
    variables:
        BRANCH: teep-master
    tags:
        - fast-shells
    stage: build
    script:
        - docker pull aistcpsec/tee-dev:keystone-1.0.0
        - docker build --build-arg BRANCH=${BRANCH} --build-arg DEBUG_DATE=$(date +%s) --build-arg
          CI_JOB_TOKEN=${CI_JOB_TOKEN} --rm -t ${REPO}:keystone ./keystone/teep-master
        - docker push ${REPO}:keystone

taref-dev-optee_rpi3_netboot:
    variables:
        BRANCH: teep-master
    tags:
        - shell117
    stage: build
    script:
        - docker pull aistcpsec/tee-dev:optee-3.10.0
        - docker build --build-arg BRANCH=${BRANCH} --build-arg DEBUG_DATE=$(date +%s) --build-arg
          CI_JOB_TOKEN=${CI_JOB_TOKEN} --rm -t ${REPO}:optee_rpi3_netboot ./optee_rpi3_netboot/teep-master
        - docker push ${REPO}:optee_rpi3_netboot
        - docker stop $NETBOOT_CONT_NME || true
        - docker rm $NETBOOT_CONT_NME || true
        - docker run --name $NETBOOT_CONT_NME -itd ${REPO}:optee_rpi3_netboot
#        - docker wait $NETBOOT_CONT_NME
        - docker cp $NETBOOT_CONT_NME:${ROOTFS_DIR}/${ROOTFS_FILE} $CI_PROJECT_DIR/${ROOTFS_FILE}
        - docker stop $NETBOOT_CONT_NME || true
        - docker rm $NETBOOT_CONT_NME || true
    artifacts:
        paths:
            - $CI_PROJECT_DIR/${ROOTFS_FILE}
        expire_in: 1 week

trigger_docker-teep-dev:
    variables:
        TOKEN: f5b8decb37c0dc31a4a35972ca0cf5
    stage: trigger
    tags:
        - shell117
    script:
        - "curl -X POST --fail --retry 5 -F token=${TOKEN} -F ref=main -k
          https://192.168.100.100/api/v4/projects/133/trigger/pipeline"
